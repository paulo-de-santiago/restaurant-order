{
  "version": 3,
  "sources": ["../../../../../../node_modules/i/lib/util.js"],
  "sourcesContent": ["// Some utility functions in js\n\nvar u = (module.exports = {\n  array: {\n    // Returns a copy of the array with the value removed once\n    //\n    //     [1, 2, 3, 1].del 1 #=> [2, 3, 1]\n    //     [1, 2, 3].del 4    #=> [1, 2, 3]\n    del: function (arr, val) {\n      var index = arr.indexOf(val);\n\n      if (index != -1) {\n        if (index == 0) {\n          return arr.slice(1);\n        } else {\n          return arr.slice(0, index).concat(arr.slice(index + 1));\n        }\n      } else {\n        return arr;\n      }\n    },\n\n    // Returns the first element of the array\n    //\n    //     [1, 2, 3].first() #=> 1\n    first: function (arr) {\n      return arr[0];\n    },\n\n    // Returns the last element of the array\n    //\n    //     [1, 2, 3].last()  #=> 3\n    last: function (arr) {\n      return arr[arr.length - 1];\n    },\n  },\n  string: {\n    // Returns a copy of str with all occurrences of pattern replaced with either replacement or the return value of a function.\n    // The pattern will typically be a Regexp; if it is a String then no regular expression metacharacters will be interpreted\n    // (that is /\\d/ will match a digit, but ‘\\d’ will match a backslash followed by a ‘d’).\n    //\n    // In the function form, the current match object is passed in as a parameter to the function, and variables such as\n    // $[1], $[2], $[3] (where $ is the match object) will be set appropriately. The value returned by the function will be\n    // substituted for the match on each call.\n    //\n    // The result inherits any tainting in the original string or any supplied replacement string.\n    //\n    //     \"hello\".gsub /[aeiou]/, '*'      #=> \"h*ll*\"\n    //     \"hello\".gsub /[aeiou]/, '<$1>'   #=> \"h<e>ll<o>\"\n    //     \"hello\".gsub /[aeiou]/, ($) {\n    //       \"<#{$[1]}>\"                    #=> \"h<e>ll<o>\"\n    //\n    gsub: function (str, pattern, replacement) {\n      var i, match, matchCmpr, matchCmprPrev, replacementStr, result, self;\n      if (!(pattern != null && replacement != null)) return u.string.value(str);\n      result = '';\n      self = str;\n      while (self.length > 0) {\n        if ((match = self.match(pattern))) {\n          result += self.slice(0, match.index);\n          if (typeof replacement === 'function') {\n            match[1] = match[1] || match[0];\n            result += replacement(match);\n          } else if (replacement.match(/\\$[1-9]/)) {\n            matchCmprPrev = match;\n            matchCmpr = u.array.del(match, void 0);\n            while (matchCmpr !== matchCmprPrev) {\n              matchCmprPrev = matchCmpr;\n              matchCmpr = u.array.del(matchCmpr, void 0);\n            }\n            match[1] = match[1] || match[0];\n            replacementStr = replacement;\n            for (i = 1; i <= 9; i++) {\n              if (matchCmpr[i]) {\n                replacementStr = u.string.gsub(replacementStr, new RegExp('\\\\$' + i), matchCmpr[i]);\n              }\n            }\n            result += replacementStr;\n          } else {\n            result += replacement;\n          }\n          self = self.slice(match.index + match[0].length);\n        } else {\n          result += self;\n          self = '';\n        }\n      }\n      return result;\n    },\n\n    // Returns a copy of the String with the first letter being upper case\n    //\n    //     \"hello\".upcase #=> \"Hello\"\n    upcase: function (str) {\n      var self = u.string.gsub(str, /_([a-z])/, function ($) {\n        return '_' + $[1].toUpperCase();\n      });\n\n      self = u.string.gsub(self, /\\/([a-z])/, function ($) {\n        return '/' + $[1].toUpperCase();\n      });\n\n      return self[0].toUpperCase() + self.substr(1);\n    },\n\n    // Returns a copy of capitalized string\n    //\n    //     \"employee salary\" #=> \"Employee Salary\"\n    capitalize: function (str, spaces) {\n      if (!str.length) {\n        return str;\n      }\n\n      var self = str.toLowerCase();\n\n      if (!spaces) {\n        self = u.string.gsub(self, /\\s([a-z])/, function ($) {\n          return ' ' + $[1].toUpperCase();\n        });\n      }\n\n      return self[0].toUpperCase() + self.substr(1);\n    },\n\n    // Returns a copy of the String with the first letter being lower case\n    //\n    //     \"HELLO\".downcase #=> \"hELLO\"\n    downcase: function (str) {\n      var self = u.string.gsub(str, /_([A-Z])/, function ($) {\n        return '_' + $[1].toLowerCase();\n      });\n\n      self = u.string.gsub(self, /\\/([A-Z])/, function ($) {\n        return '/' + $[1].toLowerCase();\n      });\n\n      return self[0].toLowerCase() + self.substr(1);\n    },\n\n    // Returns a string value for the String object\n    //\n    //     \"hello\".value() #=> \"hello\"\n    value: function (str) {\n      return str.substr(0);\n    },\n  },\n});\n"],
  "mappings": "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",
  "names": []
}
